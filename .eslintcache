[{"/home/bahtiyar/projects/pomodor/test/src/index.js":"1","/home/bahtiyar/projects/pomodor/test/src/App.js":"2","/home/bahtiyar/projects/pomodor/test/src/reportWebVitals.js":"3","/home/bahtiyar/projects/pomodor/test/src/components/SettingsDisplay/SettingsDisplay.js":"4","/home/bahtiyar/projects/pomodor/test/src/components/Timer/TimerWork.js":"5"},{"size":500,"mtime":1611004902299,"results":"6","hashOfConfig":"7"},{"size":2779,"mtime":1622128328941,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611004902299,"results":"9","hashOfConfig":"7"},{"size":2577,"mtime":1612622187324,"results":"10","hashOfConfig":"7"},{"size":6059,"mtime":1622145057693,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1vw1q1r",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/bahtiyar/projects/pomodor/test/src/index.js",[],["24","25"],"/home/bahtiyar/projects/pomodor/test/src/App.js",[],"/home/bahtiyar/projects/pomodor/test/src/reportWebVitals.js",[],"/home/bahtiyar/projects/pomodor/test/src/components/SettingsDisplay/SettingsDisplay.js",["26"],"import React from 'react';\nimport s from './SettingsDisplay.module.css';\nimport favicon from './../../common/icons/settings-2.svg';\n\nclass SettingsDisplay extends React.Component  {\n    constructor() {\n      super();\n\n      this.state = {\n        display: ''\n      }\n\n    }\n\n    changeSessionTime = (e) => {\n      \n      let session = e.target.value;\n      if(session <= 60) {\n        this.props.setTimerMinute(session);\n      }\n      \n    }\n\n    changeShortBreakTime = (e) => {\n      let shortBreak = e.target.value;\n      this.props.setShortBreakTime(shortBreak)\n    }\n\n    changeLongBteakTime = (e) => {\n      let longBreak = e.target.value;\n      this.props.setLongBreakTime(longBreak)\n    }\n\n    changeNumberBetween = (e) => {\n      this.props.setNumberBetween(e.target.value)\n    }\n\n    closePopupAndSave = () => {\n      this.setState({\n        display: 'none'\n      })\n    }\n\n    closePopup = () => {\n      this.setState({\n        display: 'none'\n      })\n      this.props.notChangeParentComponent();\n    }\n  \n    showSettings = () => {\n      this.setState({\n        display: 'block'\n      })\n      this.props.notChangeParentComponent();\n    }\n\n    render() {\n\n      const style = {display: this.state.display}\n      \n      return (\n\n        <div>\n\n          <div onClick={this.showSettings} className={s.faviconImage}>\n            <img src={favicon} />\n          </div>\n\n        <div className={s.displayWrapper}>\n\n          <div className={s.settingsWrap} style={style}>\n  \n          <div className={s.pomodoro}><span>Pomodoro</span></div>\n          <input onChange={this.changeSessionTime} value={this.props.state.timerMinute} />\n  \n          <div className={s.short}><span>Short Break</span></div>\n          <input onChange={this.changeShortBreakTime} value={this.props.state.shortBreak} />\n  \n          <div className={s.long}><span>Long Break</span></div>\n          <input onChange={this.changeLongBteakTime} value={this.props.state.longBreak} />\n  \n          <div className={s.number}><span>Number of pomodoro between break</span></div>\n          <input onChange={this.changeNumberBetween} value={this.props.state.timeBetween} />\n  \n          <div className={s.buttonsWrapper}>\n  \n          <div onClick={this.closePopup} className={s.buttons}><div className={s.buttonsInside}>Close</div></div>\n          <div onClick={this.closePopupAndSave} className={s.buttons}><div className={s.buttonsInside}>Save</div></div>\n          \n          </div>\n          </div>\n          \n        </div>\n\n        \n\n        </div>\n      )\n    }\n  \n}\n\nexport default SettingsDisplay;","/home/bahtiyar/projects/pomodor/test/src/components/Timer/TimerWork.js",["27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":67,"column":13,"nodeType":"34","endLine":67,"endColumn":34},{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":26},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'createRef' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]